import { create } from "zustand";
import { NotificationState } from "../models/Types";

export const useNotificationStore = create<NotificationState>((set) => ({
  activeTime: "always-on",
  startTime: "08:00",
  endTime: "20:00",
  freqOption: "every-time",
  freqOptionTimer: 0,
  emailOn: false,
  telegramOn: false,
  tempCond: 80,
  isTempCondOn: true,
  cpuLoadCond: 80,
  isCpuLoadCondOn: true,
  ramLoadCond: 80,
  isRamLoadCondOn: true,
  diskSpaceCond: 80,
  isDiskSpaceCondOn: true,

  setActiveTime: (activeTime) => set({ activeTime }),
  setStartTime: (startTime) => set({ startTime }),
  setEndTime: (endTime) => set({ endTime }),
  setFreqOption: (freqOption) => set({ freqOption }),
  setFreqOptionTimer: (freqOptionTimer) => set({ freqOptionTimer }),
  setEmailOn: (emailOn) => set({ emailOn }),
  setTelegramOn: (telegramOn) => set({ telegramOn }),
  setTempCond: (tempCond) => set({ tempCond }),
  setIsTempCondOn: (isTempCondOn) => set({ isTempCondOn }),
  setCpuLoadCond: (cpuLoadCond) => set({ cpuLoadCond }),
  setIsCpuLoadCondOn: (isCpuLoadCondOn) => set({ isCpuLoadCondOn }),
  setRamLoadCond: (ramLoadCond) => set({ ramLoadCond }),
  setIsRamLoadCondOn: (isRamLoadCondOn) => set({ isRamLoadCondOn }),
  setDiskSpaceCond: (diskSpaceCond) => set({ diskSpaceCond }),
  setIsDiskSpaceCondOn: (isDiskSpaceCondOn) => set({ isDiskSpaceCondOn }),

  resetStore: () =>
    set({
      activeTime: "always-on",
      startTime: "08:00",
      endTime: "20:00",
      freqOption: "every-time",
      freqOptionTimer: 0,
      emailOn: false,
      telegramOn: false,
      tempCond: 80,
      isTempCondOn: true,
      cpuLoadCond: 80,
      isCpuLoadCondOn: true,
      ramLoadCond: 80,
      isRamLoadCondOn: true,
      diskSpaceCond: 80,
      isDiskSpaceCondOn: true,
    }),

  setStoreFromSettings: (notifications) =>
    set((state) => ({
      activeTime: notifications.activeTime ?? state.activeTime,
      startTime: notifications.startTime ?? state.startTime,
      endTime: notifications.endTime ?? state.endTime,
      freqOption: notifications.freqOption ?? state.freqOption,
      freqOptionTimer: notifications.freqOptionTimer ?? state.freqOptionTimer,
      emailOn: notifications.emailOn ?? state.emailOn,
      telegramOn: notifications.telegramOn ?? state.telegramOn,
      tempCond: notifications.tempCond ?? state.tempCond,
      isTempCondOn: notifications.isTempCondOn ?? state.isTempCondOn,
      cpuLoadCond: notifications.cpuLoadCond ?? state.cpuLoadCond,
      isCpuLoadCondOn: notifications.isCpuLoadCondOn ?? state.isCpuLoadCondOn,
      ramLoadCond: notifications.ramLoadCond ?? state.ramLoadCond,
      isRamLoadCondOn: notifications.isRamLoadCondOn ?? state.isRamLoadCondOn,
      diskSpaceCond: notifications.diskSpaceCond ?? state.diskSpaceCond,
      isDiskSpaceCondOn:
        notifications.isDiskSpaceCondOn ?? state.isDiskSpaceCondOn,
    })),
}));
